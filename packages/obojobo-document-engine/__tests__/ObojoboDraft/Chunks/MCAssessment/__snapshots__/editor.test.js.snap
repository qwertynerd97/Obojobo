// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MCAssessment editor ChoiceList builds the expected component 1`] = `
<div
  dummy="dummyData"
>
  <span
    className="instructions"
  >
    Pick all of the correct answers
     
  </span>
  <div
    className="obojobo-draft--components--button is-not-dangerous align-center choice-button pad"
  >
    <button
      onClick={[Function]}
    >
      + Add Choice
    </button>
  </div>
</div>
`;

exports[`MCAssessment editor ChoiceList component adds choice 1`] = `"<div><span class=\\"instructions\\"><!-- react-text: 3 -->Pick all of the correct answers<!-- /react-text --><!-- react-text: 4 --> <!-- /react-text --></span><div class=\\"obojobo-draft--components--button is-not-dangerous align-center choice-button pad\\"><button>+ Add Choice</button></div></div>"`;

exports[`MCAssessment editor Node builds the expected component 1`] = `
<div
  className="component obojobo-draft--chunks--mc-assessment is-response-type-pick-one-multiple-correct is-mode-practice is-not-showing-explanation is-not-scored"
  dummy="dummyData"
/>
`;

exports[`MCAssessment editor Settings builds the expected component 1`] = `
<div
  className="mc-settings"
  dummy="dummyData"
>
  <div />
</div>
`;

exports[`MCAssessment editor oboToSlate converts an OboNode to a Slate node 1`] = `
Object {
  "data": Object {
    "content": Object {},
  },
  "key": "mockKey",
  "nodes": Array [
    Object {
      "nodes": Array [
        undefined,
        Object {
          "data": Object {
            "content": undefined,
          },
          "key": undefined,
          "object": "block",
          "type": "NotADefinedNode",
        },
      ],
      "object": "block",
      "type": "ObojoboDraft.Chunks.MCAssessment.ChoiceList",
    },
    Object {
      "nodes": Array [
        Object {
          "data": Object {
            "current": undefined,
            "display": "Response Type",
            "name": "responseType",
            "options": Array [
              "pick-one",
              "pick-all",
            ],
            "type": "type-select",
          },
          "isVoid": true,
          "object": "block",
          "type": "Parameter",
        },
        Object {
          "data": Object {
            "checked": undefined,
            "display": "Shuffle",
            "name": "shuffle",
            "options": undefined,
            "type": "type-toggle",
          },
          "isVoid": true,
          "object": "block",
          "type": "Parameter",
        },
      ],
      "object": "block",
      "type": "ObojoboDraft.Chunks.MCAssessment.Settings",
    },
  ],
  "object": "block",
  "type": "mockType",
}
`;

exports[`MCAssessment editor plugins.renderNode renders a ChoiceList when passed 1`] = `
<ChoiceList
  node={
    Object {
      "data": Object {
        "get": [Function],
      },
      "type": "ObojoboDraft.Chunks.MCAssessment.ChoiceList",
    }
  }
/>
`;

exports[`MCAssessment editor plugins.renderNode renders a MCAssessment when passed 1`] = `
<Node
  node={
    Object {
      "data": Object {
        "get": [Function],
      },
      "type": "ObojoboDraft.Chunks.MCAssessment",
    }
  }
/>
`;

exports[`MCAssessment editor plugins.renderNode renders a Setting when passed 1`] = `
<Settings
  node={
    Object {
      "data": Object {
        "get": [Function],
      },
      "type": "ObojoboDraft.Chunks.MCAssessment.Settings",
    }
  }
/>
`;

exports[`MCAssessment editor slateToObo converts a Slate node to an OboNode 1`] = `
Object {
  "children": Array [
    undefined,
  ],
  "content": Object {
    "responseType": "pick-one",
    "shuffle": false,
  },
  "id": "mockKey",
  "type": "mockType",
}
`;

exports[`MCAssessment editor slateToObo converts a Slate node to an OboNode with no content 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "id": undefined,
      "type": "NotADefinedNode",
    },
  ],
  "content": Object {},
  "id": "mockKey",
  "type": "mockType",
}
`;

exports[`MCAssessment editor slateToObo converts a Slate node to an OboNode with two correct 1`] = `
Object {
  "children": Array [
    undefined,
    undefined,
    undefined,
  ],
  "content": Object {
    "responseType": "pick-one-multiple-correct",
    "shuffle": false,
  },
  "id": "mockKey",
  "type": "mockType",
}
`;
